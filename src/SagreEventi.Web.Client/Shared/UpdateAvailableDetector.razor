@inject IJSRuntime jsRuntime

@if (newVersionAvailable)
{
    <button type="button" class="btn btn-warning shadow floating-update-button" onclick="window.location.reload()">
        A new version of the application is available. Click here to reload.
    </button>
}

@code {
    private bool newVersionAvailable = false;

    protected override async Task OnInitializedAsync()
    {
        await RegisterForUpdateAvailableNotification();
    }

    private async Task RegisterForUpdateAvailableNotification()
    {
        await jsRuntime.InvokeAsync<object>(identifier: "registerForUpdateAvailableNotification", DotNetObjectReference.Create(this), nameof(OnUpdateAvailable));
    }

    [JSInvokable(nameof(OnUpdateAvailable))]
    public Task OnUpdateAvailable()
    {
        newVersionAvailable = true;
        StateHasChanged();

        return Task.CompletedTask;
    }
}